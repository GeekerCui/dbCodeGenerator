<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.geekercui.generator.dao.MySQLGeneratorDao">

	<resultMap id="TableMap" type="com.github.geekercui.generator.entity.TableEntity" >
		<result column="tableName" property="name" jdbcType="VARCHAR" />
		<result column="engine" property="engine" jdbcType="VARCHAR" />
		<result column="tableComment" property="comment" jdbcType="VARCHAR" />
		<result column="tableRows" property="rowNum" jdbcType="VARCHAR" />
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>

	<resultMap id="ColumnMap" type="com.github.geekercui.generator.entity.ColumnEntity" >
		<result column="columnName" property="name" jdbcType="VARCHAR" />
		<result column="columnComment" property="comment" jdbcType="VARCHAR" />
		<result column="dataType" property="type" jdbcType="VARCHAR" />
		<result column="columnKey" property="key" jdbcType="VARCHAR" />
		<result column="extra" property="extra" jdbcType="VARCHAR" />
		<result column="columnDefault" property="defaultValue" jdbcType="VARCHAR" />
		<result column="isNullAble" property="isNullable" jdbcType="VARCHAR" />
	</resultMap>

	<select id="queryList" resultMap="TableMap" >
		select
			table_name tableName,
			engine,
			table_comment tableComment,
			table_rows tableRows,
			create_time createTime
		from information_schema.tables
		where table_schema = (select database())
		<if test="tableName != null and tableName.trim() != ''">
			and table_name like concat('%', #{tableName}, '%')
		</if>
		order by create_time desc
	</select>

	<select id="queryTable" resultMap="TableMap">
		select
			table_name tableName,
			engine,
			table_comment tableComment,
			create_time createTime
		from information_schema.tables
			where table_schema = (select database()) and table_name = #{tableName}
	</select>



	<select id="queryColumns" resultMap="ColumnMap">
		select
		 	column_name columnName,
		 	data_type dataType,
		 	column_comment columnComment,
		 	column_key columnKey,
		 	column_default columnDefault,
		 	is_nullable isNullAble,
		 	extra
		from information_schema.columns
 			where table_name = #{tableName} and table_schema = (select database()) order by ordinal_position
	</select>
</mapper>